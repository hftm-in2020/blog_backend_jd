name: Build and Deploy Docker image to Azure Container App
'on':
  push:
    branches:
      - DEV
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: jessicasblog.azurecr.io/blog_backend_jd
      IMAGE_TAG: DEV
      QUARKUS_PROFILE: dev
      QUARKUS_DATASOURCE_USERNAME: dev_user
      QUARKUS_DATASOURCE_PASSWORD: dev_password
      QUARKUS_DATASOURCE_JDBC_URL: 'jdbc:mysql://dev-mysql:3306/blogdb'
      QUARKUS_SMALLRYE_OPENAPI_INFO_TITLE: DEV Blog API
      QUARKUS_CONTAINER_IMAGE_NAME: blog-backend-dev
      QUARKUS_CONTAINER_IMAGE_TAG: latest-dev
      AZURE_WEBAPP_NAME: My DEV Version
      AZURE_RESOURCE_GROUP: d-rg-blog-jd
      AZURE_IMAGE_NAME: '${{env.IMAGE_NAME}}'
      AZURE_IMAGE_TAG: '${{env.IMAGE_TAG}}'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Login to Azure Container Registry
        uses: azure/docker-login@v1
        with:
          login-server: jessicasblog.azurecr.io
          username: '${{secrets.ACR_USERNAME}}'
          password: '${{secrets.ACR_PASSWORD}}'
      - name: Replace environment variables in application.properties file
        run: >-
          sed -i 's|\%dev.quarkus.smallrye-openapi.info-title=DEV Blog
          API|\%dev.quarkus.smallrye-openapi.info-title='"${QUARKUS_SMALLRYE_OPENAPI_INFO_TITLE}"'|g;
          s|\%dev.quarkus.container-image.name=blog-backend-dev|\%dev.quarkus.container-image.name='"${QUARKUS_CONTAINER_IMAGE_NAME}"'|g;
          s|\%dev.quarkus.container-image.tag=latest-dev|\%dev.quarkus.container-image.tag='"${QUARKUS_CONTAINER_IMAGE_TAG}"'|g'
          src/main/resources/application.properties
      - name: Build Docker image
        run: >-
          docker build --build-arg QUARKUS_PROFILE=${{env.QUARKUS_PROFILE}}
          --build-arg
          QUARKUS_DATASOURCE_USERNAME=${{env.QUARKUS_DATASOURCE_USERNAME}}
          --build-arg
          QUARKUS_DATASOURCE_PASSWORD=${{env.QUARKUS_DATASOURCE_PASSWORD}}
          --build-arg
          QUARKUS_DATASOURCE_JDBC_URL=${{env.QUARKUS_DATASOURCE_JDBC_URL}} -t
          ${{env.AZURE_IMAGE_NAME}}:${{env.AZURE_IMAGE_TAG}} .
      - name: Push Docker image to Azure Container Registry
        run: 'docker push ${{env.AZURE_IMAGE_NAME}}:${{env.AZURE_IMAGE_TAG}}'
      - name: Deploy to Azure Container App
        uses: Azure/webapps-deploy@v2
        with:
          app-name: '${{env.AZURE_WEBAPP_NAME}}'
          images: |
            ${{ env.AZURE_IMAGE_NAME }}:${{ env.AZURE_IMAGE_TAG }}
          resource-group: '${{env.AZURE_RESOURCE_GROUP}}'
          multi-container-config-file: |
            version: "1.0"
            containers:
            - name: backend
              properties:
                image: ${{env.AZURE_IMAGE_NAME}}:${{env.AZURE_IMAGE_TAG}}
              ports:
                - "8080"
